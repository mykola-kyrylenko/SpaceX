{"version":3,"file":"static/js/357.b01f5e39.chunk.js","mappings":"gOAGMA,GAAOC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,obAqBJE,EAAOF,EAAAA,GAAAA,GAAH,8T,SClBJG,GAASC,EAAAA,EAAAA,OAAK,kBAAK,qDAAL,IAqDpB,EAlDwB,WACtB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,IACbE,EAAAA,EAAAA,KACCC,MAAK,SAACC,GAAD,OAAYN,EAAWM,EAAvB,IACLC,OAAM,SAACC,GAEN,OADAN,GAAa,GACNO,QAAQC,IAAIF,EACpB,IAEDN,GAAa,EACd,GAAE,KAKD,4BAEM,yBACGD,GAAY,SAACL,EAAD,IAAYG,IACvB,SAACJ,EAAD,UAEGI,EAAQY,KAAI,SAACC,GAAD,OACX,yBACE,SAACpB,EAAD,CAAMqB,GAAE,UAAKD,EAAOE,IAApB,SACGF,EAAOG,QAFHH,EAAOE,GADL,SAarB,0BACE,SAAC,EAAAE,SAAD,CAAUC,UAAU,6CAApB,UACE,SAAC,KAAD,UAQX,C,kGCvDKC,EAAW,wCAEF,SAAed,IAA9B,4CAAe,OAAf,0BAAe,kHAEYe,IAAAA,IAAUD,GAFtB,cAELZ,EAFK,yBAIJA,EAASc,MAJL,gCAQXX,QAAQC,IAAR,MARW,gF","sources":["components/pages/DragonsListPage/DragonListPage.styled.jsx","components/pages/DragonsListPage/DragonsListPage.jsx","components/services/spaceX-Api.js"],"sourcesContent":["import styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst NavL = styled(NavLink)`\r\n     @media screen and (min-width: 320px){\r\n        color: white;\r\n        font-weight: 700;\r\n        display: inline-block;\r\n        \r\n        :active,:hover,:focus{\r\n            color: #0260da;\r\n            text-decoration: underline;\r\n        }\r\n    }\r\n\r\n    @media screen and (min-width: 480px){\r\n        font-size: 18px;\r\n    }\r\n\r\n    @media screen and (min-width: 768px){\r\n        font-size: 18px;\r\n    }\r\n`;\r\n\r\nconst List = styled.ul`\r\n    margin: 20px;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n\r\n    @media screen and (min-width: 1280px){\r\n        padding: 50px 0 50px;\r\n        margin: 0 auto;\r\n        width: 30%;\r\n        justify-content: space-around;\r\n    } \r\n`\r\n\r\nexport {\r\n    List,\r\n    NavL,\r\n}","import {React, useEffect, useState} from 'react';\r\nimport { lazy, Suspense } from \"react\";\r\nimport fetchSpaceXData from '../../services/spaceX-Api';\r\nimport {Outlet } from 'react-router-dom';\r\nimport { List, NavL} from './DragonListPage.styled';\r\n\r\nconst Loader = lazy(()=> import('../../Loader/Loader'));\r\n\r\n\r\nconst DragonsListPage = () => {\r\n  const [dragons, setDragons] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false); \r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    fetchSpaceXData()\r\n    .then((response)=>setDragons(response))\r\n    .catch((error)=>{\r\n      setIsLoading(false);\r\n      return console.log(error);\r\n    })\r\n    \r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n\r\n          <div>\r\n            {isLoading ? <Loader/> : dragons && (\r\n              <List>\r\n\r\n                {dragons.map((dragon)=>(\r\n                  <li key={dragon.id}>\r\n                    <NavL to={`${dragon.id}`}>\r\n                      {dragon.name}\r\n                    </NavL>\r\n                  </li>\r\n                ))}\r\n\r\n              </List>\r\n            )}\r\n\r\n          </div>\r\n        \r\n        <div>\r\n          <Suspense fallback={<div>Loading page...</div>}>\r\n            <Outlet/>\r\n          </Suspense>\r\n        </div>\r\n\r\n\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default DragonsListPage;","import axios from \"axios\";\r\n\r\nconst BASE_URL = 'https://api.spacexdata.com/v4/dragons';\r\n\r\nexport default async function fetchSpaceXData(){\r\n  try{\r\n    const response = await axios.get(BASE_URL);\r\n    // console.log(response)\r\n    return response.data;\r\n\r\n\r\n  } catch(error){\r\n    console.log(error)\r\n  }\r\n}"],"names":["NavL","styled","NavLink","List","Loader","lazy","useState","dragons","setDragons","isLoading","setIsLoading","useEffect","fetchSpaceXData","then","response","catch","error","console","log","map","dragon","to","id","name","Suspense","fallback","BASE_URL","axios","data"],"sourceRoot":""}